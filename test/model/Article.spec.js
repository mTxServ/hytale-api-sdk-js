/**
 * Hytale API
 * Hytale Official API
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.4
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.HytaleApi);
  }
}(this, function(expect, HytaleApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new HytaleApi.Article();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Article', function() {
    it('should create an instance of Article', function() {
      // uncomment below and update the code to test Article
      //var instance = new HytaleApi.Article();
      //expect(instance).to.be.a(HytaleApi.Article);
    });

    it('should have the property featured (base name: "featured")', function() {
      // uncomment below and update the code to test the property featured
      //var instance = new HytaleApi.Article();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instance = new HytaleApi.Article();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "_id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new HytaleApi.Article();
      //expect(instance).to.be();
    });

    it('should have the property author (base name: "author")', function() {
      // uncomment below and update the code to test the property author
      //var instance = new HytaleApi.Article();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new HytaleApi.Article();
      //expect(instance).to.be();
    });

    it('should have the property publishedAt (base name: "publishedAt")', function() {
      // uncomment below and update the code to test the property publishedAt
      //var instance = new HytaleApi.Article();
      //expect(instance).to.be();
    });

    it('should have the property coverImage (base name: "coverImage")', function() {
      // uncomment below and update the code to test the property coverImage
      //var instance = new HytaleApi.Article();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "createdAt")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new HytaleApi.Article();
      //expect(instance).to.be();
    });

    it('should have the property slug (base name: "slug")', function() {
      // uncomment below and update the code to test the property slug
      //var instance = new HytaleApi.Article();
      //expect(instance).to.be();
    });

    it('should have the property publishedTo (base name: "publishedTo")', function() {
      // uncomment below and update the code to test the property publishedTo
      //var instance = new HytaleApi.Article();
      //expect(instance).to.be();
    });

    it('should have the property bodyExcerpt (base name: "bodyExcerpt")', function() {
      // uncomment below and update the code to test the property bodyExcerpt
      //var instance = new HytaleApi.Article();
      //expect(instance).to.be();
    });

    it('should have the property body (base name: "body")', function() {
      // uncomment below and update the code to test the property body
      //var instance = new HytaleApi.Article();
      //expect(instance).to.be();
    });

  });

}));
